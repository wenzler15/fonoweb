import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@excelsia/hooks/dist/useVisible.js
var import_react = __toESM(require_react(), 1);
function useVisible({ initialState = false } = {}) {
  const [visible, setVisible] = (0, import_react.useState)(initialState);
  return (0, import_react.useMemo)(() => ({
    visible,
    show: () => setVisible(true),
    hide: () => setVisible(false),
    toggle: () => setVisible((oldState) => !oldState),
    set: (visible2) => setVisible(visible2)
  }), [visible, setVisible]);
}

// node_modules/@excelsia/hooks/dist/useArray.js
var import_react2 = __toESM(require_react(), 1);
function useArray(initial) {
  const [array, setArray] = (0, import_react2.useState)(initial);
  return (0, import_react2.useMemo)(() => ({
    value: array,
    replace: setArray,
    includes: (item) => array.includes(item),
    push: (item) => setArray([...array, item]),
    remove: (item) => setArray(array.filter((i) => i !== item)),
    toggle: (item) => array.includes(item) ? setArray(array.filter((i) => i !== item)) : setArray([...array, item]),
    thunk: {
      push: (item) => () => setArray([...array, item]),
      remove: (item) => () => setArray(array.filter((i) => i !== item)),
      toggle: (item) => () => array.includes(item) ? setArray(array.filter((i) => i !== item)) : setArray([...array, item])
    }
  }), [array]);
}

// node_modules/@excelsia/hooks/dist/useChangeEffect.js
var import_react3 = __toESM(require_react(), 1);
function useChangeEffect(effect, deps) {
  const isFirst = (0, import_react3.useRef)(true);
  (0, import_react3.useEffect)(() => {
    if (isFirst.current) {
      isFirst.current = false;
      return;
    }
    effect();
  }, deps);
}
export {
  useArray,
  useChangeEffect,
  useVisible
};
//# sourceMappingURL=@excelsia_hooks.js.map
