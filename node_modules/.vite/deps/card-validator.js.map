{
  "version": 3,
  "sources": ["../../credit-card-type/dist/lib/card-types.js", "../../credit-card-type/dist/lib/clone.js", "../../credit-card-type/dist/lib/matches.js", "../../credit-card-type/dist/lib/add-matching-cards-to-results.js", "../../credit-card-type/dist/lib/is-valid-input-type.js", "../../credit-card-type/dist/lib/find-best-match.js", "../../credit-card-type/dist/index.js", "../../card-validator/dist/cardholder-name.js", "../../card-validator/dist/luhn-10.js", "../../card-validator/dist/card-number.js", "../../card-validator/dist/expiration-year.js", "../../card-validator/dist/lib/is-array.js", "../../card-validator/dist/lib/parse-date.js", "../../card-validator/dist/expiration-month.js", "../../card-validator/dist/expiration-date.js", "../../card-validator/dist/cvv.js", "../../card-validator/dist/postal-code.js", "../../card-validator/dist/index.js"],
  "sourcesContent": ["\"use strict\";\nvar cardTypes = {\n    visa: {\n        niceType: \"Visa\",\n        type: \"visa\",\n        patterns: [4],\n        gaps: [4, 8, 12],\n        lengths: [16, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    mastercard: {\n        niceType: \"Mastercard\",\n        type: \"mastercard\",\n        patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    \"american-express\": {\n        niceType: \"American Express\",\n        type: \"american-express\",\n        patterns: [34, 37],\n        gaps: [4, 10],\n        lengths: [15],\n        code: {\n            name: \"CID\",\n            size: 4,\n        },\n    },\n    \"diners-club\": {\n        niceType: \"Diners Club\",\n        type: \"diners-club\",\n        patterns: [[300, 305], 36, 38, 39],\n        gaps: [4, 10],\n        lengths: [14, 16, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    discover: {\n        niceType: \"Discover\",\n        type: \"discover\",\n        patterns: [6011, [644, 649], 65],\n        gaps: [4, 8, 12],\n        lengths: [16, 19],\n        code: {\n            name: \"CID\",\n            size: 3,\n        },\n    },\n    jcb: {\n        niceType: \"JCB\",\n        type: \"jcb\",\n        patterns: [2131, 1800, [3528, 3589]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    unionpay: {\n        niceType: \"UnionPay\",\n        type: \"unionpay\",\n        patterns: [\n            620,\n            [624, 626],\n            [62100, 62182],\n            [62184, 62187],\n            [62185, 62197],\n            [62200, 62205],\n            [622010, 622999],\n            622018,\n            [622019, 622999],\n            [62207, 62209],\n            [622126, 622925],\n            [623, 626],\n            6270,\n            6272,\n            6276,\n            [627700, 627779],\n            [627781, 627799],\n            [6282, 6289],\n            6291,\n            6292,\n            810,\n            [8110, 8131],\n            [8132, 8151],\n            [8152, 8163],\n            [8164, 8171],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVN\",\n            size: 3,\n        },\n    },\n    maestro: {\n        niceType: \"Maestro\",\n        type: \"maestro\",\n        patterns: [\n            493698,\n            [500000, 504174],\n            [504176, 506698],\n            [506779, 508999],\n            [56, 59],\n            63,\n            67,\n            6,\n        ],\n        gaps: [4, 8, 12],\n        lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    elo: {\n        niceType: \"Elo\",\n        type: \"elo\",\n        patterns: [\n            401178,\n            401179,\n            438935,\n            457631,\n            457632,\n            431274,\n            451416,\n            457393,\n            504175,\n            [506699, 506778],\n            [509000, 509999],\n            627780,\n            636297,\n            636368,\n            [650031, 650033],\n            [650035, 650051],\n            [650405, 650439],\n            [650485, 650538],\n            [650541, 650598],\n            [650700, 650718],\n            [650720, 650727],\n            [650901, 650978],\n            [651652, 651679],\n            [655000, 655019],\n            [655021, 655058],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVE\",\n            size: 3,\n        },\n    },\n    mir: {\n        niceType: \"Mir\",\n        type: \"mir\",\n        patterns: [[2200, 2204]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVP2\",\n            size: 3,\n        },\n    },\n    hiper: {\n        niceType: \"Hiper\",\n        type: \"hiper\",\n        patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    hipercard: {\n        niceType: \"Hipercard\",\n        type: \"hipercard\",\n        patterns: [606282],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n};\nmodule.exports = cardTypes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = void 0;\nfunction clone(originalObject) {\n    if (!originalObject) {\n        return null;\n    }\n    return JSON.parse(JSON.stringify(originalObject));\n}\nexports.clone = clone;\n", "\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMatchingCardsToResults = void 0;\nvar clone_1 = require(\"./clone\");\nvar matches_1 = require(\"./matches\");\nfunction addMatchingCardsToResults(cardNumber, cardConfiguration, results) {\n    var i, patternLength;\n    for (i = 0; i < cardConfiguration.patterns.length; i++) {\n        var pattern = cardConfiguration.patterns[i];\n        if (!matches_1.matches(cardNumber, pattern)) {\n            continue;\n        }\n        var clonedCardConfiguration = clone_1.clone(cardConfiguration);\n        if (Array.isArray(pattern)) {\n            patternLength = String(pattern[0]).length;\n        }\n        else {\n            patternLength = String(pattern).length;\n        }\n        if (cardNumber.length >= patternLength) {\n            clonedCardConfiguration.matchStrength = patternLength;\n        }\n        results.push(clonedCardConfiguration);\n        break;\n    }\n}\nexports.addMatchingCardsToResults = addMatchingCardsToResults;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidInputType = void 0;\nfunction isValidInputType(cardNumber) {\n    return typeof cardNumber === \"string\" || cardNumber instanceof String;\n}\nexports.isValidInputType = isValidInputType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findBestMatch = void 0;\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n    var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;\n    /*\n     * if all possible results have a maxStrength property that means the card\n     * number is sufficiently long enough to determine conclusively what the card\n     * type is\n     * */\n    return (numberOfResultsWithMaxStrengthProperty > 0 &&\n        numberOfResultsWithMaxStrengthProperty === results.length);\n}\nfunction findBestMatch(results) {\n    if (!hasEnoughResultsToDetermineBestMatch(results)) {\n        return null;\n    }\n    return results.reduce(function (bestMatch, result) {\n        if (!bestMatch) {\n            return result;\n        }\n        /*\n         * If the current best match pattern is less specific than this result, set\n         * the result as the new best match\n         * */\n        if (Number(bestMatch.matchStrength) < Number(result.matchStrength)) {\n            return result;\n        }\n        return bestMatch;\n    });\n}\nexports.findBestMatch = findBestMatch;\n", "\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar cardTypes = require(\"./lib/card-types\");\nvar add_matching_cards_to_results_1 = require(\"./lib/add-matching-cards-to-results\");\nvar is_valid_input_type_1 = require(\"./lib/is-valid-input-type\");\nvar find_best_match_1 = require(\"./lib/find-best-match\");\nvar clone_1 = require(\"./lib/clone\");\nvar customCards = {};\nvar cardNames = {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    AMERICAN_EXPRESS: \"american-express\",\n    DINERS_CLUB: \"diners-club\",\n    DISCOVER: \"discover\",\n    JCB: \"jcb\",\n    UNIONPAY: \"unionpay\",\n    MAESTRO: \"maestro\",\n    ELO: \"elo\",\n    MIR: \"mir\",\n    HIPER: \"hiper\",\n    HIPERCARD: \"hipercard\",\n};\nvar ORIGINAL_TEST_ORDER = [\n    cardNames.VISA,\n    cardNames.MASTERCARD,\n    cardNames.AMERICAN_EXPRESS,\n    cardNames.DINERS_CLUB,\n    cardNames.DISCOVER,\n    cardNames.JCB,\n    cardNames.UNIONPAY,\n    cardNames.MAESTRO,\n    cardNames.ELO,\n    cardNames.MIR,\n    cardNames.HIPER,\n    cardNames.HIPERCARD,\n];\nvar testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\nfunction findType(cardType) {\n    return customCards[cardType] || cardTypes[cardType];\n}\nfunction getAllCardTypes() {\n    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });\n}\nfunction getCardPosition(name, ignoreErrorForNotExisting) {\n    if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }\n    var position = testOrder.indexOf(name);\n    if (!ignoreErrorForNotExisting && position === -1) {\n        throw new Error('\"' + name + '\" is not a supported card type.');\n    }\n    return position;\n}\nfunction creditCardType(cardNumber) {\n    var results = [];\n    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {\n        return results;\n    }\n    if (cardNumber.length === 0) {\n        return getAllCardTypes();\n    }\n    testOrder.forEach(function (cardType) {\n        var cardConfiguration = findType(cardType);\n        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);\n    });\n    var bestMatch = find_best_match_1.findBestMatch(results);\n    if (bestMatch) {\n        return [bestMatch];\n    }\n    return results;\n}\ncreditCardType.getTypeInfo = function (cardType) {\n    return clone_1.clone(findType(cardType));\n};\ncreditCardType.removeCard = function (name) {\n    var position = getCardPosition(name);\n    testOrder.splice(position, 1);\n};\ncreditCardType.addCard = function (config) {\n    var existingCardPosition = getCardPosition(config.type, true);\n    customCards[config.type] = config;\n    if (existingCardPosition === -1) {\n        testOrder.push(config.type);\n    }\n};\ncreditCardType.updateCard = function (cardType, updates) {\n    var originalObject = customCards[cardType] || cardTypes[cardType];\n    if (!originalObject) {\n        throw new Error(\"\\\"\" + cardType + \"\\\" is not a recognized type. Use `addCard` instead.'\");\n    }\n    if (updates.type && originalObject.type !== updates.type) {\n        throw new Error(\"Cannot overwrite type parameter.\");\n    }\n    var clonedCard = clone_1.clone(originalObject);\n    clonedCard = __assign(__assign({}, clonedCard), updates);\n    customCards[clonedCard.type] = clonedCard;\n};\ncreditCardType.changeOrder = function (name, position) {\n    var currentPosition = getCardPosition(name);\n    testOrder.splice(currentPosition, 1);\n    testOrder.splice(position, 0, name);\n};\ncreditCardType.resetModifications = function () {\n    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\n    customCards = {};\n};\ncreditCardType.types = cardNames;\nmodule.exports = creditCardType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cardholderName = void 0;\nvar CARD_NUMBER_REGEX = /^[\\d\\s-]*$/;\nvar MAX_LENGTH = 255;\nfunction verification(isValid, isPotentiallyValid) {\n    return { isValid: isValid, isPotentiallyValid: isPotentiallyValid };\n}\nfunction cardholderName(value) {\n    if (typeof value !== \"string\") {\n        return verification(false, false);\n    }\n    if (value.length === 0) {\n        return verification(false, true);\n    }\n    if (value.length > MAX_LENGTH) {\n        return verification(false, false);\n    }\n    if (CARD_NUMBER_REGEX.test(value)) {\n        return verification(false, true);\n    }\n    return verification(true, true);\n}\nexports.cardholderName = cardholderName;\n", "/* eslint-disable */\n/*\n * Luhn algorithm implementation in JavaScript\n * Copyright (c) 2009 Nicholas C. Zakas\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\"use strict\";\nfunction luhn10(identifier) {\n    var sum = 0;\n    var alt = false;\n    var i = identifier.length - 1;\n    var num;\n    while (i >= 0) {\n        num = parseInt(identifier.charAt(i), 10);\n        if (alt) {\n            num *= 2;\n            if (num > 9) {\n                num = (num % 10) + 1; // eslint-disable-line no-extra-parens\n            }\n        }\n        alt = !alt;\n        sum += num;\n        i--;\n    }\n    return sum % 10 === 0;\n}\nmodule.exports = luhn10;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cardNumber = void 0;\nvar luhn10 = require(\"./luhn-10\");\nvar getCardTypes = require(\"credit-card-type\");\nfunction verification(card, isPotentiallyValid, isValid) {\n    return {\n        card: card,\n        isPotentiallyValid: isPotentiallyValid,\n        isValid: isValid,\n    };\n}\nfunction cardNumber(value, options) {\n    if (options === void 0) { options = {}; }\n    var isPotentiallyValid, isValid, maxLength;\n    if (typeof value !== \"string\" && typeof value !== \"number\") {\n        return verification(null, false, false);\n    }\n    var testCardValue = String(value).replace(/-|\\s/g, \"\");\n    if (!/^\\d*$/.test(testCardValue)) {\n        return verification(null, false, false);\n    }\n    var potentialTypes = getCardTypes(testCardValue);\n    if (potentialTypes.length === 0) {\n        return verification(null, false, false);\n    }\n    else if (potentialTypes.length !== 1) {\n        return verification(null, true, false);\n    }\n    var cardType = potentialTypes[0];\n    if (options.maxLength && testCardValue.length > options.maxLength) {\n        return verification(cardType, false, false);\n    }\n    if (cardType.type === getCardTypes.types.UNIONPAY &&\n        options.luhnValidateUnionPay !== true) {\n        isValid = true;\n    }\n    else {\n        isValid = luhn10(testCardValue);\n    }\n    maxLength = Math.max.apply(null, cardType.lengths);\n    if (options.maxLength) {\n        maxLength = Math.min(options.maxLength, maxLength);\n    }\n    for (var i = 0; i < cardType.lengths.length; i++) {\n        if (cardType.lengths[i] === testCardValue.length) {\n            isPotentiallyValid = testCardValue.length < maxLength || isValid;\n            return verification(cardType, isPotentiallyValid, isValid);\n        }\n    }\n    return verification(cardType, testCardValue.length < maxLength, false);\n}\nexports.cardNumber = cardNumber;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expirationYear = void 0;\nvar DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE = 19;\nfunction verification(isValid, isPotentiallyValid, isCurrentYear) {\n    return {\n        isValid: isValid,\n        isPotentiallyValid: isPotentiallyValid,\n        isCurrentYear: isCurrentYear || false,\n    };\n}\nfunction expirationYear(value, maxElapsedYear) {\n    if (maxElapsedYear === void 0) { maxElapsedYear = DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE; }\n    var isCurrentYear;\n    if (typeof value !== \"string\") {\n        return verification(false, false);\n    }\n    if (value.replace(/\\s/g, \"\") === \"\") {\n        return verification(false, true);\n    }\n    if (!/^\\d*$/.test(value)) {\n        return verification(false, false);\n    }\n    var len = value.length;\n    if (len < 2) {\n        return verification(false, true);\n    }\n    var currentYear = new Date().getFullYear();\n    if (len === 3) {\n        // 20x === 20x\n        var firstTwo = value.slice(0, 2);\n        var currentFirstTwo = String(currentYear).slice(0, 2);\n        return verification(false, firstTwo === currentFirstTwo);\n    }\n    if (len > 4) {\n        return verification(false, false);\n    }\n    var numericValue = parseInt(value, 10);\n    var twoDigitYear = Number(String(currentYear).substr(2, 2));\n    var valid = false;\n    if (len === 2) {\n        if (String(currentYear).substr(0, 2) === value) {\n            return verification(false, true);\n        }\n        isCurrentYear = twoDigitYear === numericValue;\n        valid =\n            numericValue >= twoDigitYear &&\n                numericValue <= twoDigitYear + maxElapsedYear;\n    }\n    else if (len === 4) {\n        isCurrentYear = currentYear === numericValue;\n        valid =\n            numericValue >= currentYear &&\n                numericValue <= currentYear + maxElapsedYear;\n    }\n    return verification(valid, valid, isCurrentYear);\n}\nexports.expirationYear = expirationYear;\n", "\"use strict\";\n// Polyfill taken from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Polyfill>.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArray = void 0;\nexports.isArray = Array.isArray ||\n    function (arg) {\n        return Object.prototype.toString.call(arg) === \"[object Array]\";\n    };\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDate = void 0;\nvar expiration_year_1 = require(\"../expiration-year\");\nvar is_array_1 = require(\"./is-array\");\nfunction getNumberOfMonthDigitsInDateString(dateString) {\n    var firstCharacter = Number(dateString[0]);\n    var assumedYear;\n    /*\n      if the first character in the string starts with `0`,\n      we know that the month will be 2 digits.\n  \n      '0122' => {month: '01', year: '22'}\n    */\n    if (firstCharacter === 0) {\n        return 2;\n    }\n    /*\n      if the first character in the string starts with\n      number greater than 1, it must be a 1 digit month\n  \n      '322' => {month: '3', year: '22'}\n    */\n    if (firstCharacter > 1) {\n        return 1;\n    }\n    /*\n      if the first 2 characters make up a number between\n      13-19, we know that the month portion must be 1\n  \n      '139' => {month: '1', year: '39'}\n    */\n    if (firstCharacter === 1 && Number(dateString[1]) > 2) {\n        return 1;\n    }\n    /*\n      if the first 2 characters make up a number between\n      10-12, we check if the year portion would be considered\n      valid if we assumed that the month was 1. If it is\n      not potentially valid, we assume the month must have\n      2 digits.\n  \n      '109' => {month: '10', year: '9'}\n      '120' => {month: '1', year: '20'} // when checked in the year 2019\n      '120' => {month: '12', year: '0'} // when checked in the year 2021\n    */\n    if (firstCharacter === 1) {\n        assumedYear = dateString.substr(1);\n        return expiration_year_1.expirationYear(assumedYear).isPotentiallyValid ? 1 : 2;\n    }\n    /*\n      If the length of the value is exactly 5 characters,\n      we assume a full year was passed in, meaning the remaining\n      single leading digit must be the month value.\n  \n      '12202' => {month: '1', year: '2202'}\n    */\n    if (dateString.length === 5) {\n        return 1;\n    }\n    /*\n      If the length of the value is more than five characters,\n      we assume a full year was passed in addition to the month\n      and therefore the month portion must be 2 digits.\n  \n      '112020' => {month: '11', year: '2020'}\n    */\n    if (dateString.length > 5) {\n        return 2;\n    }\n    /*\n      By default, the month value is the first value\n    */\n    return 1;\n}\nfunction parseDate(datestring) {\n    var date;\n    if (/^\\d{4}-\\d{1,2}$/.test(datestring)) {\n        date = datestring.split(\"-\").reverse();\n    }\n    else if (/\\//.test(datestring)) {\n        date = datestring.split(/\\s*\\/\\s*/g);\n    }\n    else if (/\\s/.test(datestring)) {\n        date = datestring.split(/ +/g);\n    }\n    if (is_array_1.isArray(date)) {\n        return {\n            month: date[0] || \"\",\n            year: date.slice(1).join(),\n        };\n    }\n    var numberOfDigitsInMonth = getNumberOfMonthDigitsInDateString(datestring);\n    var month = datestring.substr(0, numberOfDigitsInMonth);\n    return {\n        month: month,\n        year: datestring.substr(month.length),\n    };\n}\nexports.parseDate = parseDate;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expirationMonth = void 0;\nfunction verification(isValid, isPotentiallyValid, isValidForThisYear) {\n    return {\n        isValid: isValid,\n        isPotentiallyValid: isPotentiallyValid,\n        isValidForThisYear: isValidForThisYear || false,\n    };\n}\nfunction expirationMonth(value) {\n    var currentMonth = new Date().getMonth() + 1;\n    if (typeof value !== \"string\") {\n        return verification(false, false);\n    }\n    if (value.replace(/\\s/g, \"\") === \"\" || value === \"0\") {\n        return verification(false, true);\n    }\n    if (!/^\\d*$/.test(value)) {\n        return verification(false, false);\n    }\n    var month = parseInt(value, 10);\n    if (isNaN(Number(value))) {\n        return verification(false, false);\n    }\n    var result = month > 0 && month < 13;\n    return verification(result, result, result && month >= currentMonth);\n}\nexports.expirationMonth = expirationMonth;\n", "\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.expirationDate = void 0;\nvar parse_date_1 = require(\"./lib/parse-date\");\nvar expiration_month_1 = require(\"./expiration-month\");\nvar expiration_year_1 = require(\"./expiration-year\");\nfunction verification(isValid, isPotentiallyValid, month, year) {\n    return {\n        isValid: isValid,\n        isPotentiallyValid: isPotentiallyValid,\n        month: month,\n        year: year,\n    };\n}\nfunction expirationDate(value, maxElapsedYear) {\n    var date;\n    if (typeof value === \"string\") {\n        value = value.replace(/^(\\d\\d) (\\d\\d(\\d\\d)?)$/, \"$1/$2\");\n        date = parse_date_1.parseDate(String(value));\n    }\n    else if (value !== null && typeof value === \"object\") {\n        var fullDate = __assign({}, value);\n        date = {\n            month: String(fullDate.month),\n            year: String(fullDate.year),\n        };\n    }\n    else {\n        return verification(false, false, null, null);\n    }\n    var monthValid = expiration_month_1.expirationMonth(date.month);\n    var yearValid = expiration_year_1.expirationYear(date.year, maxElapsedYear);\n    if (monthValid.isValid) {\n        if (yearValid.isCurrentYear) {\n            var isValidForThisYear = monthValid.isValidForThisYear;\n            return verification(isValidForThisYear, isValidForThisYear, date.month, date.year);\n        }\n        if (yearValid.isValid) {\n            return verification(true, true, date.month, date.year);\n        }\n    }\n    if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {\n        return verification(false, true, null, null);\n    }\n    return verification(false, false, null, null);\n}\nexports.expirationDate = expirationDate;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cvv = void 0;\nvar DEFAULT_LENGTH = 3;\nfunction includes(array, thing) {\n    for (var i = 0; i < array.length; i++) {\n        if (thing === array[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction max(array) {\n    var maximum = DEFAULT_LENGTH;\n    var i = 0;\n    for (; i < array.length; i++) {\n        maximum = array[i] > maximum ? array[i] : maximum;\n    }\n    return maximum;\n}\nfunction verification(isValid, isPotentiallyValid) {\n    return { isValid: isValid, isPotentiallyValid: isPotentiallyValid };\n}\nfunction cvv(value, maxLength) {\n    if (maxLength === void 0) { maxLength = DEFAULT_LENGTH; }\n    maxLength = maxLength instanceof Array ? maxLength : [maxLength];\n    if (typeof value !== \"string\") {\n        return verification(false, false);\n    }\n    if (!/^\\d*$/.test(value)) {\n        return verification(false, false);\n    }\n    if (includes(maxLength, value.length)) {\n        return verification(true, true);\n    }\n    if (value.length < Math.min.apply(null, maxLength)) {\n        return verification(false, true);\n    }\n    if (value.length > max(maxLength)) {\n        return verification(false, false);\n    }\n    return verification(true, true);\n}\nexports.cvv = cvv;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.postalCode = void 0;\nvar DEFAULT_MIN_POSTAL_CODE_LENGTH = 3;\nfunction verification(isValid, isPotentiallyValid) {\n    return { isValid: isValid, isPotentiallyValid: isPotentiallyValid };\n}\nfunction postalCode(value, options) {\n    if (options === void 0) { options = {}; }\n    var minLength = options.minLength || DEFAULT_MIN_POSTAL_CODE_LENGTH;\n    if (typeof value !== \"string\") {\n        return verification(false, false);\n    }\n    else if (value.length < minLength) {\n        return verification(false, true);\n    }\n    return verification(true, true);\n}\nexports.postalCode = postalCode;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar creditCardType = __importStar(require(\"credit-card-type\"));\nvar cardholder_name_1 = require(\"./cardholder-name\");\nvar card_number_1 = require(\"./card-number\");\nvar expiration_date_1 = require(\"./expiration-date\");\nvar expiration_month_1 = require(\"./expiration-month\");\nvar expiration_year_1 = require(\"./expiration-year\");\nvar cvv_1 = require(\"./cvv\");\nvar postal_code_1 = require(\"./postal-code\");\nvar cardValidator = {\n    creditCardType: creditCardType,\n    cardholderName: cardholder_name_1.cardholderName,\n    number: card_number_1.cardNumber,\n    expirationDate: expiration_date_1.expirationDate,\n    expirationMonth: expiration_month_1.expirationMonth,\n    expirationYear: expiration_year_1.expirationYear,\n    cvv: cvv_1.cvv,\n    postalCode: postal_code_1.postalCode,\n};\nmodule.exports = cardValidator;\n"],
  "mappings": "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",
  "names": ["require_dist"]
}
