import {
  FirstPage_default,
  LastPage_default,
  init_FirstPage,
  init_LastPage
} from "./chunk-KQVB45YM.js";
import {
  KeyboardArrowLeft_default,
  KeyboardArrowRight_default,
  init_KeyboardArrowLeft,
  init_KeyboardArrowRight
} from "./chunk-C6ZL2RHX.js";
import {
  IconButton_default,
  init_IconButton
} from "./chunk-MJFL6UAC.js";
import {
  init_useTheme,
  useTheme
} from "./chunk-72WB36JH.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose,
  require_prop_types
} from "./chunk-6UQGC4GI.js";
import {
  _extends,
  init_extends
} from "./chunk-M5CWVIST.js";
import {
  require_jsx_runtime
} from "./chunk-FEVPAJEA.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __esm,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@mui/material/TablePagination/TablePaginationActions.js
var React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2, _excluded, TablePaginationActions, TablePaginationActions_default;
var init_TablePaginationActions = __esm({
  "node_modules/@mui/material/TablePagination/TablePaginationActions.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_KeyboardArrowLeft();
    init_KeyboardArrowRight();
    init_useTheme();
    init_IconButton();
    init_LastPage();
    init_FirstPage();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    _excluded = ["backIconButtonProps", "count", "getItemAriaLabel", "nextIconButtonProps", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton"];
    TablePaginationActions = React.forwardRef(function TablePaginationActions2(props, ref) {
      const {
        backIconButtonProps,
        count,
        getItemAriaLabel,
        nextIconButtonProps,
        onPageChange,
        page,
        rowsPerPage,
        showFirstButton,
        showLastButton
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
      const theme = useTheme();
      const handleFirstPageButtonClick = (event) => {
        onPageChange(event, 0);
      };
      const handleBackButtonClick = (event) => {
        onPageChange(event, page - 1);
      };
      const handleNextButtonClick = (event) => {
        onPageChange(event, page + 1);
      };
      const handleLastPageButtonClick = (event) => {
        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
      };
      return (0, import_jsx_runtime2.jsxs)("div", _extends({
        ref
      }, other, {
        children: [showFirstButton && (0, import_jsx_runtime.jsx)(IconButton_default, {
          onClick: handleFirstPageButtonClick,
          disabled: page === 0,
          "aria-label": getItemAriaLabel("first", page),
          title: getItemAriaLabel("first", page),
          children: theme.direction === "rtl" ? _LastPageIcon || (_LastPageIcon = (0, import_jsx_runtime.jsx)(LastPage_default, {})) : _FirstPageIcon || (_FirstPageIcon = (0, import_jsx_runtime.jsx)(FirstPage_default, {}))
        }), (0, import_jsx_runtime.jsx)(IconButton_default, _extends({
          onClick: handleBackButtonClick,
          disabled: page === 0,
          color: "inherit",
          "aria-label": getItemAriaLabel("previous", page),
          title: getItemAriaLabel("previous", page)
        }, backIconButtonProps, {
          children: theme.direction === "rtl" ? _KeyboardArrowRight || (_KeyboardArrowRight = (0, import_jsx_runtime.jsx)(KeyboardArrowRight_default, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = (0, import_jsx_runtime.jsx)(KeyboardArrowLeft_default, {}))
        })), (0, import_jsx_runtime.jsx)(IconButton_default, _extends({
          onClick: handleNextButtonClick,
          disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
          color: "inherit",
          "aria-label": getItemAriaLabel("next", page),
          title: getItemAriaLabel("next", page)
        }, nextIconButtonProps, {
          children: theme.direction === "rtl" ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = (0, import_jsx_runtime.jsx)(KeyboardArrowLeft_default, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = (0, import_jsx_runtime.jsx)(KeyboardArrowRight_default, {}))
        })), showLastButton && (0, import_jsx_runtime.jsx)(IconButton_default, {
          onClick: handleLastPageButtonClick,
          disabled: page >= Math.ceil(count / rowsPerPage) - 1,
          "aria-label": getItemAriaLabel("last", page),
          title: getItemAriaLabel("last", page),
          children: theme.direction === "rtl" ? _FirstPageIcon2 || (_FirstPageIcon2 = (0, import_jsx_runtime.jsx)(FirstPage_default, {})) : _LastPageIcon2 || (_LastPageIcon2 = (0, import_jsx_runtime.jsx)(LastPage_default, {}))
        })]
      }));
    });
    true ? TablePaginationActions.propTypes = {
      backIconButtonProps: import_prop_types.default.object,
      count: import_prop_types.default.number.isRequired,
      getItemAriaLabel: import_prop_types.default.func.isRequired,
      nextIconButtonProps: import_prop_types.default.object,
      onPageChange: import_prop_types.default.func.isRequired,
      page: import_prop_types.default.number.isRequired,
      rowsPerPage: import_prop_types.default.number.isRequired,
      showFirstButton: import_prop_types.default.bool.isRequired,
      showLastButton: import_prop_types.default.bool.isRequired
    } : void 0;
    TablePaginationActions_default = TablePaginationActions;
  }
});

export {
  TablePaginationActions_default,
  init_TablePaginationActions
};
//# sourceMappingURL=chunk-3JPLWWNC.js.map
