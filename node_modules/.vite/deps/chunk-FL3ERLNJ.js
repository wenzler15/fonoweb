import {
  GlobalStyles_default,
  init_GlobalStyles
} from "./chunk-Y64QXAUK.js";
import {
  init_useThemeProps,
  useThemeProps
} from "./chunk-ORUJFTGG.js";
import {
  require_prop_types
} from "./chunk-6UQGC4GI.js";
import {
  _extends,
  init_extends
} from "./chunk-M5CWVIST.js";
import {
  require_jsx_runtime
} from "./chunk-FEVPAJEA.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __esm,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@mui/material/CssBaseline/CssBaseline.js
function CssBaseline(inProps) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiCssBaseline"
  });
  const {
    children,
    enableColorScheme = false
  } = props;
  return (0, import_jsx_runtime2.jsxs)(React.Fragment, {
    children: [(0, import_jsx_runtime.jsx)(GlobalStyles_default, {
      styles: (theme) => styles(theme, enableColorScheme)
    }), children]
  });
}
var React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, html, body, styles, CssBaseline_default;
var init_CssBaseline = __esm({
  "node_modules/@mui/material/CssBaseline/CssBaseline.js"() {
    init_extends();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_useThemeProps();
    init_GlobalStyles();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    html = (theme, enableColorScheme) => _extends({
      WebkitFontSmoothing: "antialiased",
      MozOsxFontSmoothing: "grayscale",
      boxSizing: "border-box",
      WebkitTextSizeAdjust: "100%"
    }, enableColorScheme && !theme.vars && {
      colorScheme: theme.palette.mode
    });
    body = (theme) => _extends({
      color: (theme.vars || theme).palette.text.primary
    }, theme.typography.body1, {
      backgroundColor: (theme.vars || theme).palette.background.default,
      "@media print": {
        backgroundColor: (theme.vars || theme).palette.common.white
      }
    });
    styles = (theme, enableColorScheme = false) => {
      var _theme$components, _theme$components$Mui;
      const colorSchemeStyles = {};
      if (enableColorScheme && theme.colorSchemes) {
        Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {
          var _scheme$palette;
          colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, "")] = {
            colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
          };
        });
      }
      let defaultStyles = _extends({
        html: html(theme, enableColorScheme),
        "*, *::before, *::after": {
          boxSizing: "inherit"
        },
        "strong, b": {
          fontWeight: theme.typography.fontWeightBold
        },
        body: _extends({
          margin: 0
        }, body(theme), {
          "&::backdrop": {
            backgroundColor: (theme.vars || theme).palette.background.default
          }
        })
      }, colorSchemeStyles);
      const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;
      if (themeOverrides) {
        defaultStyles = [defaultStyles, themeOverrides];
      }
      return defaultStyles;
    };
    true ? CssBaseline.propTypes = {
      children: import_prop_types.default.node,
      enableColorScheme: import_prop_types.default.bool
    } : void 0;
    CssBaseline_default = CssBaseline;
  }
});

// node_modules/@mui/material/CssBaseline/index.js
var init_CssBaseline2 = __esm({
  "node_modules/@mui/material/CssBaseline/index.js"() {
    init_CssBaseline();
  }
});

export {
  html,
  body,
  CssBaseline_default,
  init_CssBaseline,
  init_CssBaseline2
};
//# sourceMappingURL=chunk-FL3ERLNJ.js.map
