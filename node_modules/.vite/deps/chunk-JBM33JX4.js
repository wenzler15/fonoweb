import {
  init_FormControl
} from "./chunk-T6EBTUJF.js";
import {
  Typography_default,
  formControlState,
  init_Typography,
  init_formControlState,
  init_useFormControl,
  useFormControl
} from "./chunk-MYS7TTVO.js";
import {
  ButtonBase_default,
  init_ButtonBase
} from "./chunk-NSKKDHTI.js";
import {
  init_useControlled,
  init_useId,
  useControlled_default,
  useId_default
} from "./chunk-PDQDL7RV.js";
import {
  capitalize_default,
  createSvgIcon,
  init_base,
  init_capitalize,
  init_createSvgIcon
} from "./chunk-QCRFQG4L.js";
import {
  init_useForkRef,
  useForkRef_default
} from "./chunk-NK755PVH.js";
import {
  init_useThemeProps,
  useThemeProps
} from "./chunk-ORUJFTGG.js";
import {
  init_styled,
  rootShouldForwardProp,
  styled_default
} from "./chunk-YP54SQIN.js";
import {
  init_generateUtilityClass
} from "./chunk-KW225RNL.js";
import {
  _objectWithoutPropertiesLoose,
  alpha,
  composeClasses,
  darken,
  generateUtilityClass,
  generateUtilityClasses,
  init_esm,
  init_esm2,
  init_objectWithoutPropertiesLoose,
  lighten,
  refType_default,
  require_prop_types
} from "./chunk-6UQGC4GI.js";
import {
  clsx_m_default,
  init_clsx_m
} from "./chunk-GZZJSLR2.js";
import {
  _extends,
  init_extends
} from "./chunk-M5CWVIST.js";
import {
  require_jsx_runtime
} from "./chunk-FEVPAJEA.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __esm,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@mui/material/Checkbox/checkboxClasses.js
function getCheckboxUtilityClass(slot) {
  return generateUtilityClass("MuiCheckbox", slot);
}
var checkboxClasses, checkboxClasses_default;
var init_checkboxClasses = __esm({
  "node_modules/@mui/material/Checkbox/checkboxClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    checkboxClasses = generateUtilityClasses("MuiCheckbox", ["root", "checked", "disabled", "indeterminate", "colorPrimary", "colorSecondary"]);
    checkboxClasses_default = checkboxClasses;
  }
});

// node_modules/@mui/material/internal/switchBaseClasses.js
function getSwitchBaseUtilityClass(slot) {
  return generateUtilityClass("PrivateSwitchBase", slot);
}
var switchBaseClasses;
var init_switchBaseClasses = __esm({
  "node_modules/@mui/material/internal/switchBaseClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    switchBaseClasses = generateUtilityClasses("PrivateSwitchBase", ["root", "checked", "disabled", "input", "edgeStart", "edgeEnd"]);
  }
});

// node_modules/@mui/material/internal/SwitchBase.js
var React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, _excluded, useUtilityClasses, SwitchBaseRoot, SwitchBaseInput, SwitchBase, SwitchBase_default;
var init_SwitchBase = __esm({
  "node_modules/@mui/material/internal/SwitchBase.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_clsx_m();
    init_esm();
    init_base();
    init_capitalize();
    init_styled();
    init_useControlled();
    init_useFormControl();
    init_ButtonBase();
    init_switchBaseClasses();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    _excluded = ["autoFocus", "checked", "checkedIcon", "className", "defaultChecked", "disabled", "disableFocusRipple", "edge", "icon", "id", "inputProps", "inputRef", "name", "onBlur", "onChange", "onFocus", "readOnly", "required", "tabIndex", "type", "value"];
    useUtilityClasses = (ownerState) => {
      const {
        classes,
        checked,
        disabled,
        edge
      } = ownerState;
      const slots = {
        root: ["root", checked && "checked", disabled && "disabled", edge && `edge${capitalize_default(edge)}`],
        input: ["input"]
      };
      return composeClasses(slots, getSwitchBaseUtilityClass, classes);
    };
    SwitchBaseRoot = styled_default(ButtonBase_default)(({
      ownerState
    }) => _extends({
      padding: 9,
      borderRadius: "50%"
    }, ownerState.edge === "start" && {
      marginLeft: ownerState.size === "small" ? -3 : -12
    }, ownerState.edge === "end" && {
      marginRight: ownerState.size === "small" ? -3 : -12
    }));
    SwitchBaseInput = styled_default("input")({
      cursor: "inherit",
      position: "absolute",
      opacity: 0,
      width: "100%",
      height: "100%",
      top: 0,
      left: 0,
      margin: 0,
      padding: 0,
      zIndex: 1
    });
    SwitchBase = React.forwardRef(function SwitchBase2(props, ref) {
      const {
        autoFocus,
        checked: checkedProp,
        checkedIcon,
        className,
        defaultChecked,
        disabled: disabledProp,
        disableFocusRipple = false,
        edge = false,
        icon,
        id,
        inputProps,
        inputRef,
        name,
        onBlur,
        onChange,
        onFocus,
        readOnly,
        required = false,
        tabIndex,
        type,
        value
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
      const [checked, setCheckedState] = useControlled_default({
        controlled: checkedProp,
        default: Boolean(defaultChecked),
        name: "SwitchBase",
        state: "checked"
      });
      const muiFormControl = useFormControl();
      const handleFocus = (event) => {
        if (onFocus) {
          onFocus(event);
        }
        if (muiFormControl && muiFormControl.onFocus) {
          muiFormControl.onFocus(event);
        }
      };
      const handleBlur = (event) => {
        if (onBlur) {
          onBlur(event);
        }
        if (muiFormControl && muiFormControl.onBlur) {
          muiFormControl.onBlur(event);
        }
      };
      const handleInputChange = (event) => {
        if (event.nativeEvent.defaultPrevented) {
          return;
        }
        const newChecked = event.target.checked;
        setCheckedState(newChecked);
        if (onChange) {
          onChange(event, newChecked);
        }
      };
      let disabled = disabledProp;
      if (muiFormControl) {
        if (typeof disabled === "undefined") {
          disabled = muiFormControl.disabled;
        }
      }
      const hasLabelFor = type === "checkbox" || type === "radio";
      const ownerState = _extends({}, props, {
        checked,
        disabled,
        disableFocusRipple,
        edge
      });
      const classes = useUtilityClasses(ownerState);
      return (0, import_jsx_runtime2.jsxs)(SwitchBaseRoot, _extends({
        component: "span",
        className: clsx_m_default(classes.root, className),
        centerRipple: true,
        focusRipple: !disableFocusRipple,
        disabled,
        tabIndex: null,
        role: void 0,
        onFocus: handleFocus,
        onBlur: handleBlur,
        ownerState,
        ref
      }, other, {
        children: [(0, import_jsx_runtime.jsx)(SwitchBaseInput, _extends({
          autoFocus,
          checked: checkedProp,
          defaultChecked,
          className: classes.input,
          disabled,
          id: hasLabelFor ? id : void 0,
          name,
          onChange: handleInputChange,
          readOnly,
          ref: inputRef,
          required,
          ownerState,
          tabIndex,
          type
        }, type === "checkbox" && value === void 0 ? {} : {
          value
        }, inputProps)), checked ? checkedIcon : icon]
      }));
    });
    true ? SwitchBase.propTypes = {
      autoFocus: import_prop_types.default.bool,
      checked: import_prop_types.default.bool,
      checkedIcon: import_prop_types.default.node.isRequired,
      classes: import_prop_types.default.object,
      className: import_prop_types.default.string,
      defaultChecked: import_prop_types.default.bool,
      disabled: import_prop_types.default.bool,
      disableFocusRipple: import_prop_types.default.bool,
      edge: import_prop_types.default.oneOf(["end", "start", false]),
      icon: import_prop_types.default.node.isRequired,
      id: import_prop_types.default.string,
      inputProps: import_prop_types.default.object,
      inputRef: refType_default,
      name: import_prop_types.default.string,
      onBlur: import_prop_types.default.func,
      onChange: import_prop_types.default.func,
      onFocus: import_prop_types.default.func,
      readOnly: import_prop_types.default.bool,
      required: import_prop_types.default.bool,
      sx: import_prop_types.default.object,
      tabIndex: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
      type: import_prop_types.default.string.isRequired,
      value: import_prop_types.default.any
    } : void 0;
    SwitchBase_default = SwitchBase;
  }
});

// node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js
var React2, import_jsx_runtime3, CheckBoxOutlineBlank_default;
var init_CheckBoxOutlineBlank = __esm({
  "node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js"() {
    React2 = __toESM(require_react());
    init_createSvgIcon();
    import_jsx_runtime3 = __toESM(require_jsx_runtime());
    CheckBoxOutlineBlank_default = createSvgIcon((0, import_jsx_runtime3.jsx)("path", {
      d: "M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
    }), "CheckBoxOutlineBlank");
  }
});

// node_modules/@mui/material/internal/svg-icons/CheckBox.js
var React3, import_jsx_runtime4, CheckBox_default;
var init_CheckBox = __esm({
  "node_modules/@mui/material/internal/svg-icons/CheckBox.js"() {
    React3 = __toESM(require_react());
    init_createSvgIcon();
    import_jsx_runtime4 = __toESM(require_jsx_runtime());
    CheckBox_default = createSvgIcon((0, import_jsx_runtime4.jsx)("path", {
      d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
    }), "CheckBox");
  }
});

// node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js
var React4, import_jsx_runtime5, IndeterminateCheckBox_default;
var init_IndeterminateCheckBox = __esm({
  "node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js"() {
    React4 = __toESM(require_react());
    init_createSvgIcon();
    import_jsx_runtime5 = __toESM(require_jsx_runtime());
    IndeterminateCheckBox_default = createSvgIcon((0, import_jsx_runtime5.jsx)("path", {
      d: "M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
    }), "IndeterminateCheckBox");
  }
});

// node_modules/@mui/material/Checkbox/Checkbox.js
var React5, import_prop_types2, import_jsx_runtime6, _excluded2, useUtilityClasses2, CheckboxRoot, defaultCheckedIcon, defaultIcon, defaultIndeterminateIcon, Checkbox, Checkbox_default;
var init_Checkbox = __esm({
  "node_modules/@mui/material/Checkbox/Checkbox.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React5 = __toESM(require_react());
    import_prop_types2 = __toESM(require_prop_types());
    init_clsx_m();
    init_esm();
    init_base();
    init_esm2();
    init_SwitchBase();
    init_CheckBoxOutlineBlank();
    init_CheckBox();
    init_IndeterminateCheckBox();
    init_capitalize();
    init_useThemeProps();
    init_styled();
    init_checkboxClasses();
    import_jsx_runtime6 = __toESM(require_jsx_runtime());
    _excluded2 = ["checkedIcon", "color", "icon", "indeterminate", "indeterminateIcon", "inputProps", "size", "className"];
    useUtilityClasses2 = (ownerState) => {
      const {
        classes,
        indeterminate,
        color
      } = ownerState;
      const slots = {
        root: ["root", indeterminate && "indeterminate", `color${capitalize_default(color)}`]
      };
      const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);
      return _extends({}, classes, composedClasses);
    };
    CheckboxRoot = styled_default(SwitchBase_default, {
      shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
      name: "MuiCheckbox",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== "default" && styles[`color${capitalize_default(ownerState.color)}`]];
      }
    })(({
      theme,
      ownerState
    }) => _extends({
      color: (theme.vars || theme).palette.text.secondary
    }, !ownerState.disableRipple && {
      "&:hover": {
        backgroundColor: theme.vars ? `rgba(${ownerState.color === "default" ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === "default" ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }, ownerState.color !== "default" && {
      [`&.${checkboxClasses_default.checked}, &.${checkboxClasses_default.indeterminate}`]: {
        color: (theme.vars || theme).palette[ownerState.color].main
      },
      [`&.${checkboxClasses_default.disabled}`]: {
        color: (theme.vars || theme).palette.action.disabled
      }
    }));
    defaultCheckedIcon = (0, import_jsx_runtime6.jsx)(CheckBox_default, {});
    defaultIcon = (0, import_jsx_runtime6.jsx)(CheckBoxOutlineBlank_default, {});
    defaultIndeterminateIcon = (0, import_jsx_runtime6.jsx)(IndeterminateCheckBox_default, {});
    Checkbox = React5.forwardRef(function Checkbox2(inProps, ref) {
      var _icon$props$fontSize, _indeterminateIcon$pr;
      const props = useThemeProps({
        props: inProps,
        name: "MuiCheckbox"
      });
      const {
        checkedIcon = defaultCheckedIcon,
        color = "primary",
        icon: iconProp = defaultIcon,
        indeterminate = false,
        indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,
        inputProps,
        size = "medium",
        className
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);
      const icon = indeterminate ? indeterminateIconProp : iconProp;
      const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;
      const ownerState = _extends({}, props, {
        color,
        indeterminate,
        size
      });
      const classes = useUtilityClasses2(ownerState);
      return (0, import_jsx_runtime6.jsx)(CheckboxRoot, _extends({
        type: "checkbox",
        inputProps: _extends({
          "data-indeterminate": indeterminate
        }, inputProps),
        icon: React5.cloneElement(icon, {
          fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size
        }),
        checkedIcon: React5.cloneElement(indeterminateIcon, {
          fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size
        }),
        ownerState,
        ref,
        className: clsx_m_default(classes.root, className)
      }, other, {
        classes
      }));
    });
    true ? Checkbox.propTypes = {
      checked: import_prop_types2.default.bool,
      checkedIcon: import_prop_types2.default.node,
      classes: import_prop_types2.default.object,
      className: import_prop_types2.default.string,
      color: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types2.default.string]),
      defaultChecked: import_prop_types2.default.bool,
      disabled: import_prop_types2.default.bool,
      disableRipple: import_prop_types2.default.bool,
      icon: import_prop_types2.default.node,
      id: import_prop_types2.default.string,
      indeterminate: import_prop_types2.default.bool,
      indeterminateIcon: import_prop_types2.default.node,
      inputProps: import_prop_types2.default.object,
      inputRef: refType_default,
      onChange: import_prop_types2.default.func,
      required: import_prop_types2.default.bool,
      size: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["medium", "small"]), import_prop_types2.default.string]),
      sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),
      value: import_prop_types2.default.any
    } : void 0;
    Checkbox_default = Checkbox;
  }
});

// node_modules/@mui/material/Checkbox/index.js
var init_Checkbox2 = __esm({
  "node_modules/@mui/material/Checkbox/index.js"() {
    init_Checkbox();
    init_checkboxClasses();
    init_checkboxClasses();
  }
});

// node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js
function getFormControlLabelUtilityClasses(slot) {
  return generateUtilityClass("MuiFormControlLabel", slot);
}
var formControlLabelClasses, formControlLabelClasses_default;
var init_formControlLabelClasses = __esm({
  "node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    formControlLabelClasses = generateUtilityClasses("MuiFormControlLabel", ["root", "labelPlacementStart", "labelPlacementTop", "labelPlacementBottom", "disabled", "label", "error"]);
    formControlLabelClasses_default = formControlLabelClasses;
  }
});

// node_modules/@mui/material/FormControlLabel/FormControlLabel.js
var React6, import_prop_types3, import_jsx_runtime7, import_jsx_runtime8, _excluded3, useUtilityClasses3, FormControlLabelRoot, FormControlLabel, FormControlLabel_default;
var init_FormControlLabel = __esm({
  "node_modules/@mui/material/FormControlLabel/FormControlLabel.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React6 = __toESM(require_react());
    import_prop_types3 = __toESM(require_prop_types());
    init_clsx_m();
    init_esm();
    init_base();
    init_FormControl();
    init_Typography();
    init_capitalize();
    init_styled();
    init_useThemeProps();
    init_formControlLabelClasses();
    init_formControlState();
    import_jsx_runtime7 = __toESM(require_jsx_runtime());
    import_jsx_runtime8 = __toESM(require_jsx_runtime());
    _excluded3 = ["checked", "className", "componentsProps", "control", "disabled", "disableTypography", "inputRef", "label", "labelPlacement", "name", "onChange", "slotProps", "value"];
    useUtilityClasses3 = (ownerState) => {
      const {
        classes,
        disabled,
        labelPlacement,
        error
      } = ownerState;
      const slots = {
        root: ["root", disabled && "disabled", `labelPlacement${capitalize_default(labelPlacement)}`, error && "error"],
        label: ["label", disabled && "disabled"]
      };
      return composeClasses(slots, getFormControlLabelUtilityClasses, classes);
    };
    FormControlLabelRoot = styled_default("label", {
      name: "MuiFormControlLabel",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [{
          [`& .${formControlLabelClasses_default.label}`]: styles.label
        }, styles.root, styles[`labelPlacement${capitalize_default(ownerState.labelPlacement)}`]];
      }
    })(({
      theme,
      ownerState
    }) => _extends({
      display: "inline-flex",
      alignItems: "center",
      cursor: "pointer",
      verticalAlign: "middle",
      WebkitTapHighlightColor: "transparent",
      marginLeft: -11,
      marginRight: 16,
      [`&.${formControlLabelClasses_default.disabled}`]: {
        cursor: "default"
      }
    }, ownerState.labelPlacement === "start" && {
      flexDirection: "row-reverse",
      marginLeft: 16,
      marginRight: -11
    }, ownerState.labelPlacement === "top" && {
      flexDirection: "column-reverse",
      marginLeft: 16
    }, ownerState.labelPlacement === "bottom" && {
      flexDirection: "column",
      marginLeft: 16
    }, {
      [`& .${formControlLabelClasses_default.label}`]: {
        [`&.${formControlLabelClasses_default.disabled}`]: {
          color: (theme.vars || theme).palette.text.disabled
        }
      }
    }));
    FormControlLabel = React6.forwardRef(function FormControlLabel2(inProps, ref) {
      var _slotProps$typography;
      const props = useThemeProps({
        props: inProps,
        name: "MuiFormControlLabel"
      });
      const {
        className,
        componentsProps = {},
        control,
        disabled: disabledProp,
        disableTypography,
        label: labelProp,
        labelPlacement = "end",
        slotProps = {}
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded3);
      const muiFormControl = useFormControl();
      let disabled = disabledProp;
      if (typeof disabled === "undefined" && typeof control.props.disabled !== "undefined") {
        disabled = control.props.disabled;
      }
      if (typeof disabled === "undefined" && muiFormControl) {
        disabled = muiFormControl.disabled;
      }
      const controlProps = {
        disabled
      };
      ["checked", "name", "onChange", "value", "inputRef"].forEach((key) => {
        if (typeof control.props[key] === "undefined" && typeof props[key] !== "undefined") {
          controlProps[key] = props[key];
        }
      });
      const fcs = formControlState({
        props,
        muiFormControl,
        states: ["error"]
      });
      const ownerState = _extends({}, props, {
        disabled,
        labelPlacement,
        error: fcs.error
      });
      const classes = useUtilityClasses3(ownerState);
      const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;
      let label = labelProp;
      if (label != null && label.type !== Typography_default && !disableTypography) {
        label = (0, import_jsx_runtime7.jsx)(Typography_default, _extends({
          component: "span"
        }, typographySlotProps, {
          className: clsx_m_default(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),
          children: label
        }));
      }
      return (0, import_jsx_runtime8.jsxs)(FormControlLabelRoot, _extends({
        className: clsx_m_default(classes.root, className),
        ownerState,
        ref
      }, other, {
        children: [React6.cloneElement(control, controlProps), label]
      }));
    });
    true ? FormControlLabel.propTypes = {
      checked: import_prop_types3.default.bool,
      classes: import_prop_types3.default.object,
      className: import_prop_types3.default.string,
      componentsProps: import_prop_types3.default.shape({
        typography: import_prop_types3.default.object
      }),
      control: import_prop_types3.default.element.isRequired,
      disabled: import_prop_types3.default.bool,
      disableTypography: import_prop_types3.default.bool,
      inputRef: refType_default,
      label: import_prop_types3.default.node,
      labelPlacement: import_prop_types3.default.oneOf(["bottom", "end", "start", "top"]),
      name: import_prop_types3.default.string,
      onChange: import_prop_types3.default.func,
      slotProps: import_prop_types3.default.shape({
        typography: import_prop_types3.default.object
      }),
      sx: import_prop_types3.default.oneOfType([import_prop_types3.default.arrayOf(import_prop_types3.default.oneOfType([import_prop_types3.default.func, import_prop_types3.default.object, import_prop_types3.default.bool])), import_prop_types3.default.func, import_prop_types3.default.object]),
      value: import_prop_types3.default.any
    } : void 0;
    FormControlLabel_default = FormControlLabel;
  }
});

// node_modules/@mui/material/FormControlLabel/index.js
var init_FormControlLabel2 = __esm({
  "node_modules/@mui/material/FormControlLabel/index.js"() {
    init_FormControlLabel();
    init_formControlLabelClasses();
    init_formControlLabelClasses();
  }
});

// node_modules/@mui/material/FormGroup/formGroupClasses.js
function getFormGroupUtilityClass(slot) {
  return generateUtilityClass("MuiFormGroup", slot);
}
var formGroupClasses, formGroupClasses_default;
var init_formGroupClasses = __esm({
  "node_modules/@mui/material/FormGroup/formGroupClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    formGroupClasses = generateUtilityClasses("MuiFormGroup", ["root", "row", "error"]);
    formGroupClasses_default = formGroupClasses;
  }
});

// node_modules/@mui/material/FormGroup/FormGroup.js
var React7, import_prop_types4, import_jsx_runtime9, _excluded4, useUtilityClasses4, FormGroupRoot, FormGroup, FormGroup_default;
var init_FormGroup = __esm({
  "node_modules/@mui/material/FormGroup/FormGroup.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React7 = __toESM(require_react());
    import_prop_types4 = __toESM(require_prop_types());
    init_clsx_m();
    init_base();
    init_styled();
    init_useThemeProps();
    init_formGroupClasses();
    init_useFormControl();
    init_formControlState();
    import_jsx_runtime9 = __toESM(require_jsx_runtime());
    _excluded4 = ["className", "row"];
    useUtilityClasses4 = (ownerState) => {
      const {
        classes,
        row,
        error
      } = ownerState;
      const slots = {
        root: ["root", row && "row", error && "error"]
      };
      return composeClasses(slots, getFormGroupUtilityClass, classes);
    };
    FormGroupRoot = styled_default("div", {
      name: "MuiFormGroup",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, ownerState.row && styles.row];
      }
    })(({
      ownerState
    }) => _extends({
      display: "flex",
      flexDirection: "column",
      flexWrap: "wrap"
    }, ownerState.row && {
      flexDirection: "row"
    }));
    FormGroup = React7.forwardRef(function FormGroup2(inProps, ref) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiFormGroup"
      });
      const {
        className,
        row = false
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded4);
      const muiFormControl = useFormControl();
      const fcs = formControlState({
        props,
        muiFormControl,
        states: ["error"]
      });
      const ownerState = _extends({}, props, {
        row,
        error: fcs.error
      });
      const classes = useUtilityClasses4(ownerState);
      return (0, import_jsx_runtime9.jsx)(FormGroupRoot, _extends({
        className: clsx_m_default(classes.root, className),
        ownerState,
        ref
      }, other));
    });
    true ? FormGroup.propTypes = {
      children: import_prop_types4.default.node,
      classes: import_prop_types4.default.object,
      className: import_prop_types4.default.string,
      row: import_prop_types4.default.bool,
      sx: import_prop_types4.default.oneOfType([import_prop_types4.default.arrayOf(import_prop_types4.default.oneOfType([import_prop_types4.default.func, import_prop_types4.default.object, import_prop_types4.default.bool])), import_prop_types4.default.func, import_prop_types4.default.object])
    } : void 0;
    FormGroup_default = FormGroup;
  }
});

// node_modules/@mui/material/FormGroup/index.js
var init_FormGroup2 = __esm({
  "node_modules/@mui/material/FormGroup/index.js"() {
    init_FormGroup();
    init_formGroupClasses();
    init_formGroupClasses();
  }
});

// node_modules/@mui/material/RadioGroup/RadioGroupContext.js
var React8, RadioGroupContext, RadioGroupContext_default;
var init_RadioGroupContext = __esm({
  "node_modules/@mui/material/RadioGroup/RadioGroupContext.js"() {
    React8 = __toESM(require_react());
    RadioGroupContext = React8.createContext(void 0);
    if (true) {
      RadioGroupContext.displayName = "RadioGroupContext";
    }
    RadioGroupContext_default = RadioGroupContext;
  }
});

// node_modules/@mui/material/RadioGroup/useRadioGroup.js
function useRadioGroup() {
  return React9.useContext(RadioGroupContext_default);
}
var React9;
var init_useRadioGroup = __esm({
  "node_modules/@mui/material/RadioGroup/useRadioGroup.js"() {
    React9 = __toESM(require_react());
    init_RadioGroupContext();
  }
});

// node_modules/@mui/material/RadioGroup/RadioGroup.js
var React10, import_prop_types5, import_jsx_runtime10, _excluded5, RadioGroup, RadioGroup_default;
var init_RadioGroup = __esm({
  "node_modules/@mui/material/RadioGroup/RadioGroup.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React10 = __toESM(require_react());
    import_prop_types5 = __toESM(require_prop_types());
    init_FormGroup2();
    init_useForkRef();
    init_useControlled();
    init_RadioGroupContext();
    init_useId();
    import_jsx_runtime10 = __toESM(require_jsx_runtime());
    _excluded5 = ["actions", "children", "defaultValue", "name", "onChange", "value"];
    RadioGroup = React10.forwardRef(function RadioGroup2(props, ref) {
      const {
        actions,
        children,
        defaultValue,
        name: nameProp,
        onChange,
        value: valueProp
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded5);
      const rootRef = React10.useRef(null);
      const [value, setValueState] = useControlled_default({
        controlled: valueProp,
        default: defaultValue,
        name: "RadioGroup"
      });
      React10.useImperativeHandle(actions, () => ({
        focus: () => {
          let input = rootRef.current.querySelector("input:not(:disabled):checked");
          if (!input) {
            input = rootRef.current.querySelector("input:not(:disabled)");
          }
          if (input) {
            input.focus();
          }
        }
      }), []);
      const handleRef = useForkRef_default(ref, rootRef);
      const name = useId_default(nameProp);
      const contextValue = React10.useMemo(() => ({
        name,
        onChange(event) {
          setValueState(event.target.value);
          if (onChange) {
            onChange(event, event.target.value);
          }
        },
        value
      }), [name, onChange, setValueState, value]);
      return (0, import_jsx_runtime10.jsx)(RadioGroupContext_default.Provider, {
        value: contextValue,
        children: (0, import_jsx_runtime10.jsx)(FormGroup_default, _extends({
          role: "radiogroup",
          ref: handleRef
        }, other, {
          children
        }))
      });
    });
    true ? RadioGroup.propTypes = {
      children: import_prop_types5.default.node,
      defaultValue: import_prop_types5.default.any,
      name: import_prop_types5.default.string,
      onChange: import_prop_types5.default.func,
      value: import_prop_types5.default.any
    } : void 0;
    RadioGroup_default = RadioGroup;
  }
});

// node_modules/@mui/material/RadioGroup/index.js
var init_RadioGroup2 = __esm({
  "node_modules/@mui/material/RadioGroup/index.js"() {
    init_RadioGroup();
    init_useRadioGroup();
  }
});

// node_modules/@mui/material/Switch/switchClasses.js
function getSwitchUtilityClass(slot) {
  return generateUtilityClass("MuiSwitch", slot);
}
var switchClasses, switchClasses_default;
var init_switchClasses = __esm({
  "node_modules/@mui/material/Switch/switchClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    switchClasses = generateUtilityClasses("MuiSwitch", ["root", "edgeStart", "edgeEnd", "switchBase", "colorPrimary", "colorSecondary", "sizeSmall", "sizeMedium", "checked", "disabled", "input", "thumb", "track"]);
    switchClasses_default = switchClasses;
  }
});

// node_modules/@mui/material/Switch/Switch.js
var React11, import_prop_types6, import_jsx_runtime11, import_jsx_runtime12, _excluded6, useUtilityClasses5, SwitchRoot, SwitchSwitchBase, SwitchTrack, SwitchThumb, Switch, Switch_default;
var init_Switch = __esm({
  "node_modules/@mui/material/Switch/Switch.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    React11 = __toESM(require_react());
    import_prop_types6 = __toESM(require_prop_types());
    init_clsx_m();
    init_esm();
    init_base();
    init_esm2();
    init_capitalize();
    init_SwitchBase();
    init_useThemeProps();
    init_styled();
    init_switchClasses();
    import_jsx_runtime11 = __toESM(require_jsx_runtime());
    import_jsx_runtime12 = __toESM(require_jsx_runtime());
    _excluded6 = ["className", "color", "edge", "size", "sx"];
    useUtilityClasses5 = (ownerState) => {
      const {
        classes,
        edge,
        size,
        color,
        checked,
        disabled
      } = ownerState;
      const slots = {
        root: ["root", edge && `edge${capitalize_default(edge)}`, `size${capitalize_default(size)}`],
        switchBase: ["switchBase", `color${capitalize_default(color)}`, checked && "checked", disabled && "disabled"],
        thumb: ["thumb"],
        track: ["track"],
        input: ["input"]
      };
      const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);
      return _extends({}, classes, composedClasses);
    };
    SwitchRoot = styled_default("span", {
      name: "MuiSwitch",
      slot: "Root",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.root, ownerState.edge && styles[`edge${capitalize_default(ownerState.edge)}`], styles[`size${capitalize_default(ownerState.size)}`]];
      }
    })(({
      ownerState
    }) => _extends({
      display: "inline-flex",
      width: 34 + 12 * 2,
      height: 14 + 12 * 2,
      overflow: "hidden",
      padding: 12,
      boxSizing: "border-box",
      position: "relative",
      flexShrink: 0,
      zIndex: 0,
      verticalAlign: "middle",
      "@media print": {
        colorAdjust: "exact"
      }
    }, ownerState.edge === "start" && {
      marginLeft: -8
    }, ownerState.edge === "end" && {
      marginRight: -8
    }, ownerState.size === "small" && {
      width: 40,
      height: 24,
      padding: 7,
      [`& .${switchClasses_default.thumb}`]: {
        width: 16,
        height: 16
      },
      [`& .${switchClasses_default.switchBase}`]: {
        padding: 4,
        [`&.${switchClasses_default.checked}`]: {
          transform: "translateX(16px)"
        }
      }
    }));
    SwitchSwitchBase = styled_default(SwitchBase_default, {
      name: "MuiSwitch",
      slot: "SwitchBase",
      overridesResolver: (props, styles) => {
        const {
          ownerState
        } = props;
        return [styles.switchBase, {
          [`& .${switchClasses_default.input}`]: styles.input
        }, ownerState.color !== "default" && styles[`color${capitalize_default(ownerState.color)}`]];
      }
    })(({
      theme
    }) => ({
      position: "absolute",
      top: 0,
      left: 0,
      zIndex: 1,
      color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === "light" ? theme.palette.common.white : theme.palette.grey[300]}`,
      transition: theme.transitions.create(["left", "transform"], {
        duration: theme.transitions.duration.shortest
      }),
      [`&.${switchClasses_default.checked}`]: {
        transform: "translateX(20px)"
      },
      [`&.${switchClasses_default.disabled}`]: {
        color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === "light" ? theme.palette.grey[100] : theme.palette.grey[600]}`
      },
      [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
        opacity: 0.5
      },
      [`&.${switchClasses_default.disabled} + .${switchClasses_default.track}`]: {
        opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === "light" ? 0.12 : 0.2}`
      },
      [`& .${switchClasses_default.input}`]: {
        left: "-100%",
        width: "300%"
      }
    }), ({
      theme,
      ownerState
    }) => _extends({
      "&:hover": {
        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),
        "@media (hover: none)": {
          backgroundColor: "transparent"
        }
      }
    }, ownerState.color !== "default" && {
      [`&.${switchClasses_default.checked}`]: {
        color: (theme.vars || theme).palette[ownerState.color].main,
        "&:hover": {
          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),
          "@media (hover: none)": {
            backgroundColor: "transparent"
          }
        },
        [`&.${switchClasses_default.disabled}`]: {
          color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === "light" ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`
        }
      },
      [`&.${switchClasses_default.checked} + .${switchClasses_default.track}`]: {
        backgroundColor: (theme.vars || theme).palette[ownerState.color].main
      }
    }));
    SwitchTrack = styled_default("span", {
      name: "MuiSwitch",
      slot: "Track",
      overridesResolver: (props, styles) => styles.track
    })(({
      theme
    }) => ({
      height: "100%",
      width: "100%",
      borderRadius: 14 / 2,
      zIndex: -1,
      transition: theme.transitions.create(["opacity", "background-color"], {
        duration: theme.transitions.duration.shortest
      }),
      backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === "light" ? theme.palette.common.black : theme.palette.common.white}`,
      opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === "light" ? 0.38 : 0.3}`
    }));
    SwitchThumb = styled_default("span", {
      name: "MuiSwitch",
      slot: "Thumb",
      overridesResolver: (props, styles) => styles.thumb
    })(({
      theme
    }) => ({
      boxShadow: (theme.vars || theme).shadows[1],
      backgroundColor: "currentColor",
      width: 20,
      height: 20,
      borderRadius: "50%"
    }));
    Switch = React11.forwardRef(function Switch2(inProps, ref) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiSwitch"
      });
      const {
        className,
        color = "primary",
        edge = false,
        size = "medium",
        sx
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded6);
      const ownerState = _extends({}, props, {
        color,
        edge,
        size
      });
      const classes = useUtilityClasses5(ownerState);
      const icon = (0, import_jsx_runtime11.jsx)(SwitchThumb, {
        className: classes.thumb,
        ownerState
      });
      return (0, import_jsx_runtime12.jsxs)(SwitchRoot, {
        className: clsx_m_default(classes.root, className),
        sx,
        ownerState,
        children: [(0, import_jsx_runtime11.jsx)(SwitchSwitchBase, _extends({
          type: "checkbox",
          icon,
          checkedIcon: icon,
          ref,
          ownerState
        }, other, {
          classes: _extends({}, classes, {
            root: classes.switchBase
          })
        })), (0, import_jsx_runtime11.jsx)(SwitchTrack, {
          className: classes.track,
          ownerState
        })]
      });
    });
    true ? Switch.propTypes = {
      checked: import_prop_types6.default.bool,
      checkedIcon: import_prop_types6.default.node,
      classes: import_prop_types6.default.object,
      className: import_prop_types6.default.string,
      color: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["default", "primary", "secondary", "error", "info", "success", "warning"]), import_prop_types6.default.string]),
      defaultChecked: import_prop_types6.default.bool,
      disabled: import_prop_types6.default.bool,
      disableRipple: import_prop_types6.default.bool,
      edge: import_prop_types6.default.oneOf(["end", "start", false]),
      icon: import_prop_types6.default.node,
      id: import_prop_types6.default.string,
      inputProps: import_prop_types6.default.object,
      inputRef: refType_default,
      onChange: import_prop_types6.default.func,
      required: import_prop_types6.default.bool,
      size: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["medium", "small"]), import_prop_types6.default.string]),
      sx: import_prop_types6.default.oneOfType([import_prop_types6.default.arrayOf(import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object, import_prop_types6.default.bool])), import_prop_types6.default.func, import_prop_types6.default.object]),
      value: import_prop_types6.default.any
    } : void 0;
    Switch_default = Switch;
  }
});

// node_modules/@mui/material/Switch/index.js
var init_Switch2 = __esm({
  "node_modules/@mui/material/Switch/index.js"() {
    init_Switch();
    init_switchClasses();
    init_switchClasses();
  }
});

export {
  SwitchBase_default,
  init_SwitchBase,
  getCheckboxUtilityClass,
  checkboxClasses_default,
  Checkbox_default,
  init_Checkbox2 as init_Checkbox,
  getFormControlLabelUtilityClasses,
  formControlLabelClasses_default,
  FormControlLabel_default,
  init_FormControlLabel2 as init_FormControlLabel,
  getFormGroupUtilityClass,
  formGroupClasses_default,
  FormGroup_default,
  init_FormGroup2 as init_FormGroup,
  useRadioGroup,
  init_useRadioGroup,
  RadioGroup_default,
  init_RadioGroup2 as init_RadioGroup,
  getSwitchUtilityClass,
  switchClasses_default,
  Switch_default,
  init_Switch2 as init_Switch
};
//# sourceMappingURL=chunk-JBM33JX4.js.map
