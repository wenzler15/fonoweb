{
  "version": 3,
  "sources": ["../../cuid/lib/pad.js", "../../cuid/lib/fingerprint.browser.js", "../../cuid/lib/getRandomValue.browser.js", "../../cuid/index.js"],
  "sourcesContent": ["module.exports = function pad (num, size) {\n  var s = '000000000' + num;\n  return s.substr(s.length - size);\n};\n", "var pad = require('./pad.js');\n\nvar env = typeof window === 'object' ? window : self;\nvar globalCount = Object.keys(env).length;\nvar mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;\nvar clientId = pad((mimeTypesLength +\n  navigator.userAgent.length).toString(36) +\n  globalCount.toString(36), 4);\n\nmodule.exports = function fingerprint () {\n  return clientId;\n};\n", "\nvar getRandomValue;\n\nvar crypto = typeof window !== 'undefined' &&\n  (window.crypto || window.msCrypto) ||\n  typeof self !== 'undefined' &&\n  self.crypto;\n\nif (crypto) {\n    var lim = Math.pow(2, 32) - 1;\n    getRandomValue = function () {\n        return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);\n    };\n} else {\n    getRandomValue = Math.random;\n}\n\nmodule.exports = getRandomValue;\n", "/**\n * cuid.js\n * Collision-resistant UID generator for browsers and node.\n * Sequential for fast db lookups and recency sorting.\n * Safe for element IDs and server-side lookups.\n *\n * Extracted from CLCTR\n *\n * Copyright (c) Eric Elliott 2012\n * MIT License\n */\n\nvar fingerprint = require('./lib/fingerprint.js');\nvar pad = require('./lib/pad.js');\nvar getRandomValue = require('./lib/getRandomValue.js');\n\nvar c = 0,\n  blockSize = 4,\n  base = 36,\n  discreteValues = Math.pow(base, blockSize);\n\nfunction randomBlock () {\n  return pad((getRandomValue() *\n    discreteValues << 0)\n    .toString(base), blockSize);\n}\n\nfunction safeCounter () {\n  c = c < discreteValues ? c : 0;\n  c++; // this is not subliminal\n  return c - 1;\n}\n\nfunction cuid () {\n  // Starting with a lowercase letter makes\n  // it HTML element ID friendly.\n  var letter = 'c', // hard-coded allows for sequential access\n\n    // timestamp\n    // warning: this exposes the exact date and time\n    // that the uid was created.\n    timestamp = (new Date().getTime()).toString(base),\n\n    // Prevent same-machine collisions.\n    counter = pad(safeCounter().toString(base), blockSize),\n\n    // A few chars to generate distinct ids for different\n    // clients (so different computers are far less\n    // likely to generate the same id)\n    print = fingerprint(),\n\n    // Grab some more chars from Math.random()\n    random = randomBlock() + randomBlock();\n\n  return letter + timestamp + counter + print + random;\n}\n\ncuid.slug = function slug () {\n  var date = new Date().getTime().toString(36),\n    counter = safeCounter().toString(36).slice(-4),\n    print = fingerprint().slice(0, 1) +\n      fingerprint().slice(-1),\n    random = randomBlock().slice(-2);\n\n  return date.slice(-2) +\n    counter + print + random;\n};\n\ncuid.isCuid = function isCuid (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  if (stringToCheck.startsWith('c')) return true;\n  return false;\n};\n\ncuid.isSlug = function isSlug (stringToCheck) {\n  if (typeof stringToCheck !== 'string') return false;\n  var stringLength = stringToCheck.length;\n  if (stringLength >= 7 && stringLength <= 10) return true;\n  return false;\n};\n\ncuid.fingerprint = fingerprint;\n\nmodule.exports = cuid;\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,WAAO,UAAU,SAAS,IAAK,KAAK,MAAM;AACxC,UAAI,IAAI,cAAc;AACtB,aAAO,EAAE,OAAO,EAAE,SAAS,IAAI;AAAA,IACjC;AAAA;AAAA;;;ACHA;AAAA;AAAA,QAAI,MAAM;AAEV,QAAI,MAAM,OAAO,WAAW,WAAW,SAAS;AAChD,QAAI,cAAc,OAAO,KAAK,GAAG,EAAE;AACnC,QAAI,kBAAkB,UAAU,YAAY,UAAU,UAAU,SAAS;AACzE,QAAI,WAAW,KAAK,kBAClB,UAAU,UAAU,QAAQ,SAAS,EAAE,IACvC,YAAY,SAAS,EAAE,GAAG,CAAC;AAE7B,WAAO,UAAU,SAAS,cAAe;AACvC,aAAO;AAAA,IACT;AAAA;AAAA;;;ACXA;AAAA;AACA,QAAI;AAEJ,QAAI,SAAS,OAAO,WAAW,gBAC5B,OAAO,UAAU,OAAO,aACzB,OAAO,SAAS,eAChB,KAAK;AAEP,QAAI,QAAQ;AACJ,YAAM,KAAK,IAAI,GAAG,EAAE,IAAI;AAC5B,uBAAiB,WAAY;AACzB,eAAO,KAAK,IAAI,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,KAAK,GAAG;AAAA,MACvE;AAAA,IACJ,OAAO;AACH,uBAAiB,KAAK;AAAA,IAC1B;AANQ;AAQR,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAYA,QAAI,cAAc;AAClB,QAAI,MAAM;AACV,QAAI,iBAAiB;AAErB,QAAI,IAAI;AAAR,QACE,YAAY;AADd,QAEE,OAAO;AAFT,QAGE,iBAAiB,KAAK,IAAI,MAAM,SAAS;AAE3C,aAAS,cAAe;AACtB,aAAO,KAAK,eAAe,IACzB,kBAAkB,GACjB,SAAS,IAAI,GAAG,SAAS;AAAA,IAC9B;AAEA,aAAS,cAAe;AACtB,UAAI,IAAI,iBAAiB,IAAI;AAC7B;AACA,aAAO,IAAI;AAAA,IACb;AAEA,aAAS,OAAQ;AAGf,UAAI,SAAS,KAKX,YAAa,IAAI,KAAK,EAAE,QAAQ,EAAG,SAAS,IAAI,GAGhD,UAAU,IAAI,YAAY,EAAE,SAAS,IAAI,GAAG,SAAS,GAKrD,QAAQ,YAAY,GAGpB,SAAS,YAAY,IAAI,YAAY;AAEvC,aAAO,SAAS,YAAY,UAAU,QAAQ;AAAA,IAChD;AAEA,SAAK,OAAO,SAAS,OAAQ;AAC3B,UAAI,OAAO,IAAI,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,GACzC,UAAU,YAAY,EAAE,SAAS,EAAE,EAAE,MAAM,EAAE,GAC7C,QAAQ,YAAY,EAAE,MAAM,GAAG,CAAC,IAC9B,YAAY,EAAE,MAAM,EAAE,GACxB,SAAS,YAAY,EAAE,MAAM,EAAE;AAEjC,aAAO,KAAK,MAAM,EAAE,IAClB,UAAU,QAAQ;AAAA,IACtB;AAEA,SAAK,SAAS,SAAS,OAAQ,eAAe;AAC5C,UAAI,OAAO,kBAAkB;AAAU,eAAO;AAC9C,UAAI,cAAc,WAAW,GAAG;AAAG,eAAO;AAC1C,aAAO;AAAA,IACT;AAEA,SAAK,SAAS,SAAS,OAAQ,eAAe;AAC5C,UAAI,OAAO,kBAAkB;AAAU,eAAO;AAC9C,UAAI,eAAe,cAAc;AACjC,UAAI,gBAAgB,KAAK,gBAAgB;AAAI,eAAO;AACpD,aAAO;AAAA,IACT;AAEA,SAAK,cAAc;AAEnB,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
