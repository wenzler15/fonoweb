{
  "version": 3,
  "sources": ["../../fp-ts/es6/function.js"],
  "sourcesContent": ["// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = /*#__PURE__*/ constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = /*#__PURE__*/ constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = /*#__PURE__*/ constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = /*#__PURE__*/ constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\nexport function flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n"],
  "mappings": "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",
  "names": []
}
