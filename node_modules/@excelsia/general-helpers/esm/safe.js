import { isPresent } from './isPresent';
function safeMap(callback, value) {
    if (!isPresent(value) && arguments.length === 1) {
        return (value) => {
            return isPresent(value) ? callback(value) : undefined;
        };
    }
    return isPresent(value) ? callback(value) : undefined;
}
function safeFold(ifNotPresent, ifPresent, value) {
    if (arguments.length === 1 && !isPresent(value) && !isPresent(ifPresent)) {
        return (ifPresent) => safeFold(ifNotPresent, ifPresent);
    }
    if (arguments.length === 2 && !isPresent(value) && isPresent(ifPresent)) {
        return (value) => safeFold(ifNotPresent, ifPresent, value);
    }
    return isPresent(value) ? ifPresent(value) : ifNotPresent();
}
export const safe = {
    map: safeMap,
    fold: safeFold,
};
