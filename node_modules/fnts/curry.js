"use strict";
/**
 * @module Curry
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Creates an auto-curried function from the one provided.
 * Until the curried function receives an expected number of arguments,
 * defined by either its `length` property or the `length` argument of `curry`,
 * it will return new function which receives from one to the remaining amount
 * of arguments.
 * Any excess arguments will not be applied.
 */
function curry(fn, length) {
    if (length === void 0) { length = fn.length; }
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var argsLength = args.length;
        if (argsLength === length) {
            return fn.apply(void 0, args);
        }
        if (argsLength > length) {
            return fn.apply(void 0, args.slice(0, length));
        }
        return curry(function () {
            var nextArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                nextArgs[_i] = arguments[_i];
            }
            return fn.apply(void 0, args.concat(nextArgs));
        }, length - argsLength);
    };
}
exports.default = curry;
