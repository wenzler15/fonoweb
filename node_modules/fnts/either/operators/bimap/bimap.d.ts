/**
 * @module Either Operators
 */
import type { Either } from '../../either';
import type { Map } from '../../../types/map';
/**
 * Maps left and right values of the provided `monad` to a new `Either` monad.
 */
export default function bimap<LeftValue, RightValue, NextLeftValue, NextRightValue>(mapLeft: Map<LeftValue, NextLeftValue>, mapRight: Map<RightValue, NextRightValue>): (monad: Either<LeftValue, RightValue>) => Either<NextLeftValue, NextRightValue>;
/**
 * Maps left and right values of the provided `monad` to a new `Either` monad.
 */
export default function bimap<LeftValue, RightValue, NextLeftValue, NextRightValue>(monad: Either<LeftValue, RightValue>, mapLeft: Map<LeftValue, NextLeftValue>, mapRight: Map<RightValue, NextRightValue>): Either<NextLeftValue, NextRightValue>;
