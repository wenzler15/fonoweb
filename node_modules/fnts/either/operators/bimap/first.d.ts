/**
 * @module Either Operators
 */
import type { Either } from '../../either';
import type { Map } from '../../../types/map';
/**
 * Maps the left value of the provided `monad` to a new `Either` monad
 * with the same right value.
 */
export default function first<LeftValue, RightValue, NextLeftValue>(mapLeft: Map<LeftValue, NextLeftValue>): (monad: Either<LeftValue, RightValue>) => Either<NextLeftValue, RightValue>;
/**
 * Maps the left value of the provided `monad` to a new `Either` monad
 * with the same right value.
 */
export default function first<LeftValue, RightValue, NextLeftValue>(monad: Either<LeftValue, RightValue>, mapLeft: Map<LeftValue, NextLeftValue>): Either<NextLeftValue, RightValue>;
