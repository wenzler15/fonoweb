/**
 * @module Either Operators
 */
import type { Either } from '../../either';
import type { Map } from '../../../types/map';
/**
 * Maps the right value of the provided `monad` to a new `Either` monad
 * with the same left value.
 */
export default function second<LeftValue, RightValue, NextRightValue>(mapRight: Map<RightValue, NextRightValue>): (monad: Either<LeftValue, RightValue>) => Either<LeftValue, NextRightValue>;
/**
 * Maps the right value of the provided `monad` to a new `Either` monad
 * with the same left value.
 */
export default function second<LeftValue, RightValue, NextRightValue>(monad: Either<LeftValue, RightValue>, mapRight: Map<RightValue, NextRightValue>): Either<LeftValue, NextRightValue>;
