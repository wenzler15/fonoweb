/**
 * @module Either Operators
 */
import type { Map } from '../../types';
import type { Either } from '../either';
/**
 * Maps right value to a new monad returning it.
 */
export default function bindr<LeftValue, RightValue, NextRightValue>(mapRight: Map<RightValue, Either<LeftValue, NextRightValue>>): (monad: Either<LeftValue, RightValue>) => Either<LeftValue, NextRightValue>;
/**
 * Maps right value to a new monad returning it.
 */
export default function bindr<LeftValue, RightValue, NextRightValue>(monad: Either<LeftValue, RightValue>, mapRight: Map<RightValue, Either<LeftValue, NextRightValue>>): Either<LeftValue, NextRightValue>;
